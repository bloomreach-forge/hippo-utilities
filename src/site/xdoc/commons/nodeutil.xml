<?xml version="1.0"?>
<!--
  Copyright 2012 Hippo

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN" "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
  <properties>
    <title>Hippo Utilities Commons - NodeUtils</title>
  </properties>
  <body>
    <section name="Commons NodeUtils">
      <subsection name="org.onehippo.forge.utilities.commons.NodeUtils">
        <p>Static utility class for accessing JCR node properties without having to check RepositoryException.
          It also supports default values for Boolean, Date, Decimal, Double, Long, String and String[].
          It has the following static methods:</p>
        <source><![CDATA[
  /**
   * Get a boolean property from a node, returning false if not found
   */
  Boolean getBoolean(Node node, String propertyName)

  /**
   * Get a boolean property from a node, returning a default value if not found
   */
  Boolean getBoolean(Node node, String propertyName, Boolean defaultValue)

  /**
   * Get a Date property from a node, returning null if not found
   */
  Date getDate(Node node, String propertyName)

  /**
   * Get a Date property from a node, returning a default value if not found
   */
  Date getDate(Node node, String propertyName, Date defaultValue)

  /**
   * Get a decimal property from a node, returning null if not found
   */
  Decimal getDecimal(Node node, String propertyName)

  /**
   * Get a decimal property from a node, returning a default value if not found
   */
  Decimal getDecimal(Node node, String propertyName, Decimal defaultValue)

  /**
   * Get a double property from a node, returning null if not found
   */
  Double getDouble(Node node, String propertyName)

  /**
   * Get a double property from a node, returning a default value if not found
   */
  Double getDouble(Node node, String propertyName, Double defaultValue)

  /**
   * Get a long property from a node, returning null if not found
   */
  Long getLong(Node node, String propertyName)

  /**
   * Get a long property from a node, returning a default value if not found
   */
  Long getLong(Node node, String propertyName, Long defaultValue)

  /**
   * Get a String property from a node, returning null if not found
   */
  String getString(Node node, String propertyName)

  /**
   * Get a String property from a node, returning a default value if not found
   */
  String getString(Node node, String propertyName, String defaultValue)

  /**
   * Get a String property from a node, returning null if not found
   */
  String[] getStrings(Node node, String propertyName)

  /**
   * Get a String property from a node, returning a default value if not found
   */
  String[] getStrings(Node node, String propertyName, String[] defaultValue)]]>
        </source>
      </subsection>
    </section>
  </body>
</document>
